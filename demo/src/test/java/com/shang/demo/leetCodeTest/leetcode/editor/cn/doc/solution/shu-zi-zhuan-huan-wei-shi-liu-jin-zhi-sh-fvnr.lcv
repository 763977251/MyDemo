循环体中的代码就是解决此问题的核心思想
核心思路：
1. **每次拿到num的最后4位二进制**，通过num&0xf拿（也可以这样num&15）
2. 根据num&0xf返回的值，从数组中找到对应元素，添加到ans中
3. **然后直接无符号右移**，因为2进制转16进制符号位也要参与运算（学过计组的应该很熟悉）
4. 循环上面三个步骤，最后ans进行处理就能拿到最终结果

* []

```javascript
var toHex = function(num) {
    if(num === 0) return "0";
    let ans = '';
    const str = "0123456789abcdef";
    while(num){
        ans = str[num & 0xf] + ans;
        num >>>= 4;
    }
    return ans;
};
```

* []

```java
class Solution {
    public String toHex(int num) {
        if(num == 0) return "0";
        char[] chars = {'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'};
        StringBuilder ans = new StringBuilder();
        while(num != 0){
            ans.append(chars[num & 0xf]); 
            num >>>= 4;
        }
        return ans.reverse().toString();
    }
}
```

