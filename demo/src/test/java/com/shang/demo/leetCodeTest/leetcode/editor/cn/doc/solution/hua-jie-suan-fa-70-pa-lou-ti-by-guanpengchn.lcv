### 解题方案

#### 第一种思路

标签：数学
如果观察数学规律，可知本题是斐波那契数列，那么用斐波那契数列的公式即可解决问题，公式如下：

$F_n = 1/\sqrt{5}\Big[\Big(\frac{1+\sqrt{5}}{2}\Big)^n-\Big(\frac{1-\sqrt{5}}{2}\Big)^n\Big]$

- 时间复杂度：$O(logn)$

#### 第一种思路代码

* []

```Java
class Solution {
    public int climbStairs(int n) {
        double sqrt_5 = Math.sqrt(5);
        double fib_n = Math.pow((1 + sqrt_5) / 2, n + 1) - Math.pow((1 - sqrt_5) / 2,n + 1);
        return (int)(fib_n / sqrt_5);
    }
}
```

* []

```JavaScript
/**
 * @param {number} n
 * @return {number}
 */
var climbStairs = function(n) {
    const sqrt_5 = Math.sqrt(5);
    const fib_n = Math.pow((1 + sqrt_5) / 2, n + 1) - Math.pow((1 - sqrt_5) / 2,n + 1);
    return Math.round(fib_n / sqrt_5);
};
```

#### 第二种思路

标签：动态规划
本问题其实常规解法可以分成多个子问题，爬第n阶楼梯的方法数量，等于 2 部分之和

1. 爬上 $n-1$ 阶楼梯的方法数量。因为再爬1阶就能到第n阶
2. 爬上 $n-2$ 阶楼梯的方法数量，因为再爬2阶就能到第n阶

所以我们得到公式 $dp[n] = dp[n-1] + dp[n-2]$  
同时需要初始化 $dp[0]=1$ 和 $dp[1]=1$  
时间复杂度：$O(n)$

#### 第二种思路代码

* []

```Java
class Solution {
    public int climbStairs(int n) {
        int[] dp = new int[n + 1];
        dp[0] = 1;
        dp[1] = 1;
        for(int i = 2; i <= n; i++) {
            dp[i] = dp[i - 1] + dp[i - 2];
        }
        return dp[n];
    }
}
```

* []

```JavaScript
/**
 * @param {number} n
 * @return {number}
 */
var climbStairs = function(n) {
    const dp = [];
    dp[0] = 1;
    dp[1] = 1;
    for(let i = 2; i <= n; i++) {
        dp[i] = dp[i - 1] + dp[i - 2];
    }
    return dp[n];
};
```

#### 画解

<![frame_00001.png](https://pic.leetcode-cn.com/16bd1ad36b835f52348dee6f1aa657fad5606c6f1a932a578f6f2b6e62cde525-frame_00001.png),![frame_00002.png](https://pic.leetcode-cn.com/afc14910a78f4b01067149f3207e832971fb62fc4a792909a554bb3464a58e1f-frame_00002.png),![frame_00003.png](https://pic.leetcode-cn.com/4b75ec8caa354755fb2381b92f5a0b573d9006a8fe3a867195043c1a060adcf6-frame_00003.png),![frame_00004.png](https://pic.leetcode-cn.com/b0669930d37d53193ba94944f12e315e1bad56c3747952b9ad19d0b975802b54-frame_00004.png),![frame_00005.png](https://pic.leetcode-cn.com/7b5041443933acd76d3ab7cb108577c6161972f7fc06a86eac24b05e7e4f88ac-frame_00005.png)>

想看大鹏画解更多高频面试题，欢迎阅读大鹏的 LeetBook：[《画解剑指 Offer 》](https://leetcode-cn.com/leetbook/detail/illustrate-lcof/)，O(∩_∩)O
