### 解题思路

此处撰写解题思路

### 代码

* java

```java
class Solution {
    public boolean isMatch(String s, String p) {
        return dp(s,0,p,0);
    }
    public boolean dp(String s,int i,String p,int j){
        int m = s.length();
        int n = p.length();
        if(j == n){
            return i == m;
        }
        if(i == m){
            if((n - j) % 2 == 1){
                return false;
            }
                for(;j + 1 < n;j += 2){
                    if(p.charAt(j + 1) != '*'){
                        return false;
                    }
                }            
            return true;
        }
        //这里可以用Map解决重复子问题
        if(s.charAt(i) == p.charAt(j) || p.charAt(j) == '.'){
        if(j < p.length() - 1 && p.charAt(j + 1) == '*'){
            return dp(s,i,p,j + 2)||dp(s,i + 1,p,j);
        }else{
            return dp(s,i + 1,p,j + 1);
            }
        }else{
            if(j < p.length() - 1 && p.charAt(j + 1) == '*'){
                return dp(s,i,p,j + 2);
            }else{
                return false;
            }
        }
    }
}
```

