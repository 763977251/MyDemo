### 解题思路

此处撰写解题思路
1.创建HashMap
2.复制结点值
3.复制指向（next,random）
![image.png](https://pic.leetcode-cn.com/3c87dc234d5073491a2f02a107115828fd1934e8524c0baec559d68a63111929-image.png)

![image.png](https://pic.leetcode-cn.com/050040adc9657978b77ed01f2199dfdc7193856788124b0a5d6e6358176ddde1-image.png)

### 代码

* java

```java
/*
// Definition for a Node.
class Node {
    int val;
    Node next;
    Node random;

    public Node(int val) {
        this.val = val;
        this.next = null;
        this.random = null;
    }
}
*/
class Solution { //HashMap实现
    public Node copyRandomList(Node head) {
        HashMap<Node,Node> map = new HashMap<>(); //创建HashMap集合
        Node cur=head;
        //复制结点值
        while(cur!=null){
            //存储put:<key,value1>
            map.put(cur,new Node(cur.val)); //顺序遍历，存储老结点和新结点(先存储新创建的结点值)
            cur=cur.next;
        }
        //复制结点指向
        cur = head;
        while(cur!=null){
            //得到get:<key>.value2,3
            map.get(cur).next = map.get(cur.next); //新结点next指向同旧结点的next指向
            map.get(cur).random = map.get(cur.random); //新结点random指向同旧结点的random指向
            cur = cur.next;
        }

        //返回复制的链表
        return map.get(head);


    }
}
```

